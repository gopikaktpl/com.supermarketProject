<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="66" passed="49" failed="17" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-05-20T02:42:18Z" name="Cross Browser Test Suite" finished-at="2022-05-20T02:52:47Z" duration-ms="629116">
    <groups>
    </groups>
    <test started-at="2022-05-20T02:42:18Z" name="Chrome Browser Test" finished-at="2022-05-20T02:51:12Z" duration-ms="534358">
      <class name="executeClass.DashboardExecution">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:43:39Z" name="beforeMethod" finished-at="2022-05-20T02:43:47Z" duration-ms="7695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoginUserIsAdmin()[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:43:47Z" name="verifyLoginUserIsAdmin" finished-at="2022-05-20T02:43:49Z" duration-ms="1942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUserIsAdmin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:43:49Z" name="afterMethod" finished-at="2022-05-20T02:43:52Z" duration-ms="3244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginUserIsAdmin status=SUCCESS method=DashboardExecution.verifyLoginUserIsAdmin()[pri:0, instance:executeClass.DashboardExecution@5c44c582] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:45:13Z" name="beforeMethod" finished-at="2022-05-20T02:45:21Z" duration-ms="8701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPageTitle()[pri:1, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:45:21Z" name="verifyPageTitle" finished-at="2022-05-20T02:45:23Z" duration-ms="1917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPageTitle -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:45:23Z" name="afterMethod" finished-at="2022-05-20T02:45:24Z" duration-ms="1209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPageTitle status=SUCCESS method=DashboardExecution.verifyPageTitle()[pri:1, instance:executeClass.DashboardExecution@5c44c582] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:47:14Z" name="beforeMethod" finished-at="2022-05-20T02:47:25Z" duration-ms="10786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyManageProductPageGettingOrNot()[pri:2, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:47:25Z" name="verifyManageProductPageGettingOrNot" finished-at="2022-05-20T02:47:29Z" duration-ms="3902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyManageProductPageGettingOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:47:29Z" name="afterMethod" finished-at="2022-05-20T02:47:30Z" duration-ms="1216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyManageProductPageGettingOrNot status=SUCCESS method=DashboardExecution.verifyManageProductPageGettingOrNot()[pri:2, instance:executeClass.DashboardExecution@5c44c582] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:48:27Z" name="beforeMethod" finished-at="2022-05-20T02:48:34Z" duration-ms="7020" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifymanageCODPageGettingOrNot()[pri:3, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:48:34Z" name="VerifymanageCODPageGettingOrNot" finished-at="2022-05-20T02:48:37Z" duration-ms="2979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifymanageCODPageGettingOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:48:37Z" name="afterMethod" finished-at="2022-05-20T02:48:38Z" duration-ms="1520" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifymanageCODPageGettingOrNot status=SUCCESS method=DashboardExecution.VerifymanageCODPageGettingOrNot()[pri:3, instance:executeClass.DashboardExecution@5c44c582] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:49:36Z" name="beforeMethod" finished-at="2022-05-20T02:49:45Z" duration-ms="8996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyManageOfferCodePageGettingOrNot()[pri:4, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:49:45Z" name="verifyManageOfferCodePageGettingOrNot" finished-at="2022-05-20T02:49:47Z" duration-ms="2686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyManageOfferCodePageGettingOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:49:47Z" name="afterMethod" finished-at="2022-05-20T02:49:51Z" duration-ms="3419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyManageOfferCodePageGettingOrNot status=SUCCESS method=DashboardExecution.verifyManageOfferCodePageGettingOrNot()[pri:4, instance:executeClass.DashboardExecution@5c44c582] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:50:37Z" name="beforeMethod" finished-at="2022-05-20T02:50:44Z" duration-ms="7703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isLogoutOptionDisplayed()[pri:5, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:50:44Z" name="isLogoutOptionDisplayed" finished-at="2022-05-20T02:50:48Z" duration-ms="3588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isLogoutOptionDisplayed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:50:48Z" name="afterMethod" finished-at="2022-05-20T02:50:49Z" duration-ms="1274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isLogoutOptionDisplayed status=SUCCESS method=DashboardExecution.isLogoutOptionDisplayed()[pri:5, instance:executeClass.DashboardExecution@5c44c582] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:50:49Z" name="beforeMethod" finished-at="2022-05-20T02:50:56Z" duration-ms="6455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLogoutFunctinality()[pri:6, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:50:56Z" name="verifyLogoutFunctinality" finished-at="2022-05-20T02:50:59Z" duration-ms="3162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctinality -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:50:59Z" name="afterMethod" finished-at="2022-05-20T02:51:00Z" duration-ms="931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctinality status=SUCCESS method=DashboardExecution.verifyLogoutFunctinality()[pri:6, instance:executeClass.DashboardExecution@5c44c582] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:51:00Z" name="beforeMethod" finished-at="2022-05-20T02:51:06Z" duration-ms="6593" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isExpenceCategoryUnderManageExpenceCanBeEnable()[pri:7, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:51:06Z" name="isExpenceCategoryUnderManageExpenceCanBeEnable" finished-at="2022-05-20T02:51:11Z" duration-ms="4108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isExpenceCategoryUnderManageExpenceCanBeEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@5c44c582]" started-at="2022-05-20T02:51:11Z" name="afterMethod" finished-at="2022-05-20T02:51:12Z" duration-ms="1674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isExpenceCategoryUnderManageExpenceCanBeEnable status=SUCCESS method=DashboardExecution.isExpenceCategoryUnderManageExpenceCanBeEnable()[pri:7, instance:executeClass.DashboardExecution@5c44c582] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.DashboardExecution -->
      <class name="executeClass.ManageProductExecution">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:43:52Z" name="beforeMethod" finished-at="2022-05-20T02:43:59Z" duration-ms="7322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyHeading()[pri:0, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:43:59Z" name="verifyHeading" finished-at="2022-05-20T02:44:04Z" duration-ms="5125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeading -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:44:04Z" name="afterMethod" finished-at="2022-05-20T02:44:07Z" duration-ms="2270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHeading status=SUCCESS method=ManageProductExecution.verifyHeading()[pri:0, instance:executeClass.ManageProductExecution@67d18ed7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:45:24Z" name="beforeMethod" finished-at="2022-05-20T02:45:37Z" duration-ms="13032" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySearchFuntion()[pri:1, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:45:37Z" name="verifySearchFuntion" finished-at="2022-05-20T02:45:44Z" duration-ms="6252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchFuntion -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:45:44Z" name="afterMethod" finished-at="2022-05-20T02:45:48Z" duration-ms="4270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchFuntion status=SUCCESS method=ManageProductExecution.verifySearchFuntion()[pri:1, instance:executeClass.ManageProductExecution@67d18ed7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:47:30Z" name="beforeMethod" finished-at="2022-05-20T02:47:37Z" duration-ms="6951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyResetUnderSearchWillClearSearchResult()[pri:2, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:47:37Z" name="verifyResetUnderSearchWillClearSearchResult" finished-at="2022-05-20T02:47:43Z" duration-ms="5594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResetUnderSearchWillClearSearchResult -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:47:43Z" name="afterMethod" finished-at="2022-05-20T02:47:44Z" duration-ms="1561" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResetUnderSearchWillClearSearchResult status=SUCCESS method=ManageProductExecution.verifyResetUnderSearchWillClearSearchResult()[pri:2, instance:executeClass.ManageProductExecution@67d18ed7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:48:38Z" name="beforeMethod" finished-at="2022-05-20T02:48:45Z" duration-ms="7100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDelectFuntionality()[pri:3, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:48:45Z" name="verifyDelectFuntionality" finished-at="2022-05-20T02:48:49Z" duration-ms="3642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDelectFuntionality -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:48:49Z" name="afterMethod" finished-at="2022-05-20T02:48:50Z" duration-ms="884" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDelectFuntionality status=SUCCESS method=ManageProductExecution.verifyDelectFuntionality()[pri:3, instance:executeClass.ManageProductExecution@67d18ed7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:49:51Z" name="beforeMethod" finished-at="2022-05-20T02:49:58Z" duration-ms="7102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addNewProduct()[pri:4, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:49:58Z" name="addNewProduct" finished-at="2022-05-20T02:50:04Z" duration-ms="6144" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=101.0.4951.67)
For documentation on this error, please visit: https://selenium.dev/exceptions/#stale_element_reference
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [71d442f84af1cc06dcb257bc5597dcf4, findChildElements {id=f87f3aaa-383b-48ab-bd36-771419890b1c, using=tag name, value=option}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:65313}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:65313/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 71d442f84af1cc06dcb257bc5597dcf4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=101.0.4951.67)
For documentation on this error, please visit: https://selenium.dev/exceptions/#stale_element_reference
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [71d442f84af1cc06dcb257bc5597dcf4, findChildElements {id=f87f3aaa-383b-48ab-bd36-771419890b1c, using=tag name, value=option}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:65313}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:65313/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 71d442f84af1cc06dcb257bc5597dcf4
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElements(ElementLocation.java:179)
at org.openqa.selenium.remote.ElementLocation.findElements(ElementLocation.java:102)
at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:397)
at org.openqa.selenium.remote.RemoteWebElement.findElements(RemoteWebElement.java:213)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy17.findElements(Unknown Source)
at org.openqa.selenium.support.ui.Select.getOptions(Select.java:79)
at org.openqa.selenium.support.ui.Select.setSelectedByIndex(Select.java:295)
at org.openqa.selenium.support.ui.Select.selectByIndex(Select.java:176)
at utilities.GeneralUtility.selectDropdownByindex(GeneralUtility.java:87)
at elementRepository.ManageProductPage.SelectSubcategory(ManageProductPage.java:171)
at executeClass.ManageProductExecution.addNewProduct(ManageProductExecution.java:102)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ManageProductExecution@67d18ed7]" started-at="2022-05-20T02:50:04Z" name="afterMethod" finished-at="2022-05-20T02:50:06Z" duration-ms="1955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewProduct status=FAILURE method=ManageProductExecution.addNewProduct()[pri:4, instance:executeClass.ManageProductExecution@67d18ed7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ManageProductExecution -->
      <class name="executeClass.LogInPageExecution">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:42:18Z" name="beforeMethod" finished-at="2022-05-20T02:42:39Z" duration-ms="21155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isRememberMeCheckboxEnabledAfterClick()[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:42:39Z" name="isRememberMeCheckboxEnabledAfterClick" finished-at="2022-05-20T02:42:40Z" duration-ms="597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isRememberMeCheckboxEnabledAfterClick -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:42:40Z" name="afterMethod" finished-at="2022-05-20T02:42:53Z" duration-ms="13170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isRememberMeCheckboxEnabledAfterClick status=SUCCESS method=LogInPageExecution.isRememberMeCheckboxEnabledAfterClick()[pri:0, instance:executeClass.LogInPageExecution@5b6ec132] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:42:53Z" name="beforeMethod" finished-at="2022-05-20T02:43:03Z" duration-ms="10302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:43:03Z" name="verifyUnsuccessfulLogin" data-provider="data-provider" finished-at="2022-05-20T02:43:05Z" duration-ms="1370" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin12]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [http://groceryapp.uniqassosiates.com/admin] but found [http://groceryapp.uniqassosiates.com/admin/login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [http://groceryapp.uniqassosiates.com/admin] but found [http://groceryapp.uniqassosiates.com/admin/login]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at executeClass.LogInPageExecution.verifyUnsuccessfulLogin(LogInPageExecution.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:43:05Z" name="afterMethod" finished-at="2022-05-20T02:43:07Z" duration-ms="1983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=FAILURE method=LogInPageExecution.verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:43:07Z" name="beforeMethod" finished-at="2022-05-20T02:43:17Z" duration-ms="10544" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:43:17Z" name="verifyUnsuccessfulLogin" data-provider="data-provider" finished-at="2022-05-20T02:43:18Z" duration-ms="1194" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [http://groceryapp.uniqassosiates.com/admin] but found [http://groceryapp.uniqassosiates.com/admin/login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [http://groceryapp.uniqassosiates.com/admin] but found [http://groceryapp.uniqassosiates.com/admin/login]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at executeClass.LogInPageExecution.verifyUnsuccessfulLogin(LogInPageExecution.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:43:18Z" name="afterMethod" finished-at="2022-05-20T02:43:20Z" duration-ms="1914" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=FAILURE method=LogInPageExecution.verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:43:20Z" name="beforeMethod" finished-at="2022-05-20T02:43:35Z" duration-ms="14643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:43:35Z" name="verifyUnsuccessfulLogin" data-provider="data-provider" finished-at="2022-05-20T02:43:36Z" duration-ms="1209" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin1234]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [http://groceryapp.uniqassosiates.com/admin] but found [http://groceryapp.uniqassosiates.com/admin/login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [http://groceryapp.uniqassosiates.com/admin] but found [http://groceryapp.uniqassosiates.com/admin/login]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at executeClass.LogInPageExecution.verifyUnsuccessfulLogin(LogInPageExecution.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:43:36Z" name="afterMethod" finished-at="2022-05-20T02:43:39Z" duration-ms="2872" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=FAILURE method=LogInPageExecution.verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:44:52Z" name="beforeMethod" finished-at="2022-05-20T02:44:59Z" duration-ms="7221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfulLogin()[pri:1, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:44:59Z" name="verifySuccessfulLogin" finished-at="2022-05-20T02:45:08Z" duration-ms="8826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:45:08Z" name="afterMethod" finished-at="2022-05-20T02:45:13Z" duration-ms="4662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfulLogin status=SUCCESS method=LogInPageExecution.verifySuccessfulLogin()[pri:1, instance:executeClass.LogInPageExecution@5b6ec132] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:47:02Z" name="beforeMethod" finished-at="2022-05-20T02:47:12Z" duration-ms="9491" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySLoginWithInvalidUsernameAndPassword()[pri:2, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:47:12Z" name="verifySLoginWithInvalidUsernameAndPassword" finished-at="2022-05-20T02:47:13Z" duration-ms="1353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySLoginWithInvalidUsernameAndPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.LogInPageExecution@5b6ec132]" started-at="2022-05-20T02:47:13Z" name="afterMethod" finished-at="2022-05-20T02:47:14Z" duration-ms="1002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySLoginWithInvalidUsernameAndPassword status=SUCCESS method=LogInPageExecution.verifySLoginWithInvalidUsernameAndPassword()[pri:2, instance:executeClass.LogInPageExecution@5b6ec132] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.LogInPageExecution -->
      <class name="executeClass.CategoryPageExecution">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:44:37Z" name="beforeMethod" finished-at="2022-05-20T02:44:45Z" duration-ms="8016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPageHeading()[pri:0, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:44:45Z" name="verifyPageHeading" finished-at="2022-05-20T02:44:50Z" duration-ms="5465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPageHeading -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:44:50Z" name="afterMethod" finished-at="2022-05-20T02:44:52Z" duration-ms="1851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPageHeading status=SUCCESS method=CategoryPageExecution.verifyPageHeading()[pri:0, instance:executeClass.CategoryPageExecution@7b205dbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:46:43Z" name="beforeMethod" finished-at="2022-05-20T02:46:53Z" duration-ms="10297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySearchFunction()[pri:1, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:46:53Z" name="verifySearchFunction" finished-at="2022-05-20T02:47:00Z" duration-ms="7125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchFunction -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:47:00Z" name="afterMethod" finished-at="2022-05-20T02:47:02Z" duration-ms="2008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchFunction status=SUCCESS method=CategoryPageExecution.verifySearchFunction()[pri:1, instance:executeClass.CategoryPageExecution@7b205dbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:48:11Z" name="beforeMethod" finished-at="2022-05-20T02:48:19Z" duration-ms="7583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addNewCategory()[pri:2, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:48:19Z" name="addNewCategory" finished-at="2022-05-20T02:48:25Z" duration-ms="6301" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (334, 694)
  (Session info: chrome=101.0.4951.67)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2e3e3b9a4b2f5fc46d26caa8949e5cf5, clickElement {id=d686cc20-5e42-4561-bcef-714216149a87}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:64924}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64924/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (2e3e3b9a4b2f5fc46d26caa8949e5cf5)] -> xpath: //button[@name='create']]
Session ID: 2e3e3b9a4b2f5fc46d26caa8949e5cf5]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (334, 694)
  (Session info: chrome=101.0.4951.67)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2e3e3b9a4b2f5fc46d26caa8949e5cf5, clickElement {id=d686cc20-5e42-4561-bcef-714216149a87}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:64924}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64924/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (2e3e3b9a4b2f5fc46d26caa8949e5cf5)] -> xpath: //button[@name='create']]
Session ID: 2e3e3b9a4b2f5fc46d26caa8949e5cf5
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy17.click(Unknown Source)
at utilities.GeneralUtility.clickElement(GeneralUtility.java:21)
at elementRepository.CategoryPage.clicksave(CategoryPage.java:106)
at executeClass.CategoryPageExecution.addNewCategory(CategoryPageExecution.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewCategory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:48:25Z" name="afterMethod" finished-at="2022-05-20T02:48:27Z" duration-ms="1505" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewCategory status=FAILURE method=CategoryPageExecution.addNewCategory()[pri:2, instance:executeClass.CategoryPageExecution@7b205dbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:49:18Z" name="beforeMethod" finished-at="2022-05-20T02:49:27Z" duration-ms="8539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCancelOnAddCategoryPageCloseThePage()[pri:3, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:49:27Z" name="verifyCancelOnAddCategoryPageCloseThePage" finished-at="2022-05-20T02:49:34Z" duration-ms="7252" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (402, 694)
  (Session info: chrome=101.0.4951.67)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [87a61db8d4c0131529ed085567961b63, clickElement {id=efe083b7-0061-48ef-9ee0-88c7721bf03b}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:65201}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:65201/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (87a61db8d4c0131529ed085567961b63)] -> xpath: //*[@class='btn btn-default btn-fix']]
Session ID: 87a61db8d4c0131529ed085567961b63]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (402, 694)
  (Session info: chrome=101.0.4951.67)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [87a61db8d4c0131529ed085567961b63, clickElement {id=efe083b7-0061-48ef-9ee0-88c7721bf03b}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:65201}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:65201/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (87a61db8d4c0131529ed085567961b63)] -> xpath: //*[@class='btn btn-default btn-fix']]
Session ID: 87a61db8d4c0131529ed085567961b63
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy17.click(Unknown Source)
at utilities.GeneralUtility.clickElement(GeneralUtility.java:21)
at elementRepository.CategoryPage.clickCancel(CategoryPage.java:114)
at executeClass.CategoryPageExecution.verifyCancelOnAddCategoryPageCloseThePage(CategoryPageExecution.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelOnAddCategoryPageCloseThePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:49:34Z" name="afterMethod" finished-at="2022-05-20T02:49:36Z" duration-ms="1622" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelOnAddCategoryPageCloseThePage status=FAILURE method=CategoryPageExecution.verifyCancelOnAddCategoryPageCloseThePage()[pri:3, instance:executeClass.CategoryPageExecution@7b205dbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:50:20Z" name="beforeMethod" finished-at="2022-05-20T02:50:28Z" duration-ms="7900" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDelectFunction()[pri:4, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:50:28Z" name="verifyDelectFunction" finished-at="2022-05-20T02:50:35Z" duration-ms="6868" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (1289, 739)
  (Session info: chrome=101.0.4951.67)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [59481580171d777d9d08f47dd5dcb8e9, clickElement {id=8e102622-b367-4148-8d49-bd1e6717b511}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:65408}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:65408/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (59481580171d777d9d08f47dd5dcb8e9)] -> xpath: (//*[@class='fas fa-trash-alt'])[6]]
Session ID: 59481580171d777d9d08f47dd5dcb8e9]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (1289, 739)
  (Session info: chrome=101.0.4951.67)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [59481580171d777d9d08f47dd5dcb8e9, clickElement {id=8e102622-b367-4148-8d49-bd1e6717b511}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.67, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:65408}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:65408/devtoo..., se:cdpVersion: 101.0.4951.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (59481580171d777d9d08f47dd5dcb8e9)] -> xpath: (//*[@class='fas fa-trash-alt'])[6]]
Session ID: 59481580171d777d9d08f47dd5dcb8e9
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy17.click(Unknown Source)
at utilities.GeneralUtility.clickElement(GeneralUtility.java:21)
at elementRepository.CategoryPage.clickDelect(CategoryPage.java:122)
at executeClass.CategoryPageExecution.verifyDelectFunction(CategoryPageExecution.java:93)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDelectFunction -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.CategoryPageExecution@7b205dbd]" started-at="2022-05-20T02:50:35Z" name="afterMethod" finished-at="2022-05-20T02:50:37Z" duration-ms="2011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDelectFunction status=FAILURE method=CategoryPageExecution.verifyDelectFunction()[pri:4, instance:executeClass.CategoryPageExecution@7b205dbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.CategoryPageExecution -->
      <class name="executeClass.ExpenceCategoryPageExecution">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@2c78d320]" started-at="2022-05-20T02:44:07Z" name="beforeMethod" finished-at="2022-05-20T02:44:15Z" duration-ms="8775" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyHeading()[pri:0, instance:executeClass.ExpenceCategoryPageExecution@2c78d320]" started-at="2022-05-20T02:44:15Z" name="verifyHeading" finished-at="2022-05-20T02:44:19Z" duration-ms="4164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeading -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@2c78d320]" started-at="2022-05-20T02:44:19Z" name="afterMethod" finished-at="2022-05-20T02:44:22Z" duration-ms="2154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHeading status=SUCCESS method=ExpenceCategoryPageExecution.verifyHeading()[pri:0, instance:executeClass.ExpenceCategoryPageExecution@2c78d320] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@2c78d320]" started-at="2022-05-20T02:45:48Z" name="beforeMethod" finished-at="2022-05-20T02:46:02Z" duration-ms="14345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addNewexpenceCategory()[pri:1, instance:executeClass.ExpenceCategoryPageExecution@2c78d320]" started-at="2022-05-20T02:46:02Z" name="addNewexpenceCategory" finished-at="2022-05-20T02:46:10Z" duration-ms="7456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewexpenceCategory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@2c78d320]" started-at="2022-05-20T02:46:10Z" name="afterMethod" finished-at="2022-05-20T02:46:23Z" duration-ms="13501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewexpenceCategory status=SUCCESS method=ExpenceCategoryPageExecution.addNewexpenceCategory()[pri:1, instance:executeClass.ExpenceCategoryPageExecution@2c78d320] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@2c78d320]" started-at="2022-05-20T02:47:44Z" name="beforeMethod" finished-at="2022-05-20T02:47:50Z" duration-ms="5681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="editExistingCategory()[pri:2, instance:executeClass.ExpenceCategoryPageExecution@2c78d320]" started-at="2022-05-20T02:47:50Z" name="editExistingCategory" finished-at="2022-05-20T02:47:55Z" duration-ms="5596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editExistingCategory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@2c78d320]" started-at="2022-05-20T02:47:55Z" name="afterMethod" finished-at="2022-05-20T02:47:57Z" duration-ms="1564" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editExistingCategory status=SUCCESS method=ExpenceCategoryPageExecution.editExistingCategory()[pri:2, instance:executeClass.ExpenceCategoryPageExecution@2c78d320] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@2c78d320]" started-at="2022-05-20T02:48:50Z" name="beforeMethod" finished-at="2022-05-20T02:48:57Z" duration-ms="7210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="delectCategory()[pri:3, instance:executeClass.ExpenceCategoryPageExecution@2c78d320]" started-at="2022-05-20T02:48:57Z" name="delectCategory" finished-at="2022-05-20T02:49:01Z" duration-ms="4306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delectCategory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@2c78d320]" started-at="2022-05-20T02:49:01Z" name="afterMethod" finished-at="2022-05-20T02:49:03Z" duration-ms="1219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=delectCategory status=SUCCESS method=ExpenceCategoryPageExecution.delectCategory()[pri:3, instance:executeClass.ExpenceCategoryPageExecution@2c78d320] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExpenceCategoryPageExecution -->
      <class name="executeClass.AdminUsersPageExecution">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:44:22Z" name="beforeMethod" finished-at="2022-05-20T02:44:30Z" duration-ms="8254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThePageHeading()[pri:0, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:44:30Z" name="verifyThePageHeading" finished-at="2022-05-20T02:44:35Z" duration-ms="4796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePageHeading -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:44:35Z" name="afterMethod" finished-at="2022-05-20T02:44:37Z" duration-ms="1859" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePageHeading status=SUCCESS method=AdminUsersPageExecution.verifyThePageHeading()[pri:0, instance:executeClass.AdminUsersPageExecution@132e0cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:46:23Z" name="beforeMethod" finished-at="2022-05-20T02:46:34Z" duration-ms="10393" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyNewUseraddedOrNot()[pri:1, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:46:34Z" name="verifyNewUseraddedOrNot" finished-at="2022-05-20T02:46:40Z" duration-ms="6610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNewUseraddedOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:46:40Z" name="afterMethod" finished-at="2022-05-20T02:46:43Z" duration-ms="2469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNewUseraddedOrNot status=SUCCESS method=AdminUsersPageExecution.verifyNewUseraddedOrNot()[pri:1, instance:executeClass.AdminUsersPageExecution@132e0cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:47:57Z" name="beforeMethod" finished-at="2022-05-20T02:48:05Z" duration-ms="8076" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDelectUserFuctionalty()[pri:2, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:48:05Z" name="verifyDelectUserFuctionalty" finished-at="2022-05-20T02:48:09Z" duration-ms="4214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDelectUserFuctionalty -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:48:09Z" name="afterMethod" finished-at="2022-05-20T02:48:11Z" duration-ms="2196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDelectUserFuctionalty status=SUCCESS method=AdminUsersPageExecution.verifyDelectUserFuctionalty()[pri:2, instance:executeClass.AdminUsersPageExecution@132e0cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:49:03Z" name="beforeMethod" finished-at="2022-05-20T02:49:10Z" duration-ms="6817" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySearchWithUsername()[pri:3, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:49:10Z" name="verifySearchWithUsername" finished-at="2022-05-20T02:49:15Z" duration-ms="5850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithUsername -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:49:15Z" name="afterMethod" finished-at="2022-05-20T02:49:18Z" duration-ms="2798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchWithUsername status=SUCCESS method=AdminUsersPageExecution.verifySearchWithUsername()[pri:3, instance:executeClass.AdminUsersPageExecution@132e0cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:50:06Z" name="beforeMethod" finished-at="2022-05-20T02:50:13Z" duration-ms="7406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isPage2SelectedByClickingNextPage()[pri:4, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:50:13Z" name="isPage2SelectedByClickingNextPage" finished-at="2022-05-20T02:50:18Z" duration-ms="4448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPage2SelectedByClickingNextPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.AdminUsersPageExecution@132e0cc]" started-at="2022-05-20T02:50:18Z" name="afterMethod" finished-at="2022-05-20T02:50:20Z" duration-ms="2147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isPage2SelectedByClickingNextPage status=SUCCESS method=AdminUsersPageExecution.isPage2SelectedByClickingNextPage()[pri:4, instance:executeClass.AdminUsersPageExecution@132e0cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.AdminUsersPageExecution -->
    </test> <!-- Chrome Browser Test -->
    <test started-at="2022-05-20T02:42:18Z" name="Edge Browser Test" finished-at="2022-05-20T02:52:47Z" duration-ms="629097">
      <class name="executeClass.DashboardExecution">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:43:59Z" name="beforeMethod" finished-at="2022-05-20T02:44:09Z" duration-ms="9819" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoginUserIsAdmin()[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:44:09Z" name="verifyLoginUserIsAdmin" finished-at="2022-05-20T02:44:12Z" duration-ms="2637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginUserIsAdmin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:44:12Z" name="afterMethod" finished-at="2022-05-20T02:44:13Z" duration-ms="1358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginUserIsAdmin status=SUCCESS method=DashboardExecution.verifyLoginUserIsAdmin()[pri:0, instance:executeClass.DashboardExecution@1800a575] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:45:38Z" name="beforeMethod" finished-at="2022-05-20T02:45:52Z" duration-ms="14509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPageTitle()[pri:1, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:45:52Z" name="verifyPageTitle" finished-at="2022-05-20T02:45:58Z" duration-ms="5989" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPageTitle -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:45:58Z" name="afterMethod" finished-at="2022-05-20T02:46:01Z" duration-ms="2851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPageTitle status=SUCCESS method=DashboardExecution.verifyPageTitle()[pri:1, instance:executeClass.DashboardExecution@1800a575] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:48:21Z" name="beforeMethod" finished-at="2022-05-20T02:48:29Z" duration-ms="8109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyManageProductPageGettingOrNot()[pri:2, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:48:29Z" name="verifyManageProductPageGettingOrNot" finished-at="2022-05-20T02:48:33Z" duration-ms="3901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyManageProductPageGettingOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:48:33Z" name="afterMethod" finished-at="2022-05-20T02:48:34Z" duration-ms="1585" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyManageProductPageGettingOrNot status=SUCCESS method=DashboardExecution.verifyManageProductPageGettingOrNot()[pri:2, instance:executeClass.DashboardExecution@1800a575] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:49:46Z" name="beforeMethod" finished-at="2022-05-20T02:50:06Z" duration-ms="19749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifymanageCODPageGettingOrNot()[pri:3, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:50:06Z" name="VerifymanageCODPageGettingOrNot" finished-at="2022-05-20T02:50:10Z" duration-ms="3592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifymanageCODPageGettingOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:50:10Z" name="afterMethod" finished-at="2022-05-20T02:50:11Z" duration-ms="1390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifymanageCODPageGettingOrNot status=SUCCESS method=DashboardExecution.VerifymanageCODPageGettingOrNot()[pri:3, instance:executeClass.DashboardExecution@1800a575] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:51:18Z" name="beforeMethod" finished-at="2022-05-20T02:51:25Z" duration-ms="7310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyManageOfferCodePageGettingOrNot()[pri:4, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:51:25Z" name="verifyManageOfferCodePageGettingOrNot" finished-at="2022-05-20T02:51:28Z" duration-ms="2471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyManageOfferCodePageGettingOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:51:28Z" name="afterMethod" finished-at="2022-05-20T02:51:29Z" duration-ms="1058" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyManageOfferCodePageGettingOrNot status=SUCCESS method=DashboardExecution.verifyManageOfferCodePageGettingOrNot()[pri:4, instance:executeClass.DashboardExecution@1800a575] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:52:07Z" name="beforeMethod" finished-at="2022-05-20T02:52:15Z" duration-ms="7664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isLogoutOptionDisplayed()[pri:5, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:52:15Z" name="isLogoutOptionDisplayed" finished-at="2022-05-20T02:52:17Z" duration-ms="1864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isLogoutOptionDisplayed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:52:17Z" name="afterMethod" finished-at="2022-05-20T02:52:18Z" duration-ms="1300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isLogoutOptionDisplayed status=SUCCESS method=DashboardExecution.isLogoutOptionDisplayed()[pri:5, instance:executeClass.DashboardExecution@1800a575] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:52:18Z" name="beforeMethod" finished-at="2022-05-20T02:52:26Z" duration-ms="7674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLogoutFunctinality()[pri:6, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:52:26Z" name="verifyLogoutFunctinality" finished-at="2022-05-20T02:52:35Z" duration-ms="8715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctinality -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:52:35Z" name="afterMethod" finished-at="2022-05-20T02:52:36Z" duration-ms="1196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctinality status=SUCCESS method=DashboardExecution.verifyLogoutFunctinality()[pri:6, instance:executeClass.DashboardExecution@1800a575] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:52:36Z" name="beforeMethod" finished-at="2022-05-20T02:52:43Z" duration-ms="7178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isExpenceCategoryUnderManageExpenceCanBeEnable()[pri:7, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:52:43Z" name="isExpenceCategoryUnderManageExpenceCanBeEnable" finished-at="2022-05-20T02:52:46Z" duration-ms="2981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isExpenceCategoryUnderManageExpenceCanBeEnable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.DashboardExecution@1800a575]" started-at="2022-05-20T02:52:46Z" name="afterMethod" finished-at="2022-05-20T02:52:47Z" duration-ms="1084" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isExpenceCategoryUnderManageExpenceCanBeEnable status=SUCCESS method=DashboardExecution.isExpenceCategoryUnderManageExpenceCanBeEnable()[pri:7, instance:executeClass.DashboardExecution@1800a575] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.DashboardExecution -->
      <class name="executeClass.ManageProductExecution">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:44:13Z" name="beforeMethod" finished-at="2022-05-20T02:44:24Z" duration-ms="10649" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyHeading()[pri:0, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:44:24Z" name="verifyHeading" finished-at="2022-05-20T02:44:28Z" duration-ms="4251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeading -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:44:28Z" name="afterMethod" finished-at="2022-05-20T02:44:29Z" duration-ms="1295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHeading status=SUCCESS method=ManageProductExecution.verifyHeading()[pri:0, instance:executeClass.ManageProductExecution@1458ed9c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:46:01Z" name="beforeMethod" finished-at="2022-05-20T02:46:23Z" duration-ms="21863" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySearchFuntion()[pri:1, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:46:23Z" name="verifySearchFuntion" finished-at="2022-05-20T02:46:33Z" duration-ms="9799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchFuntion -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:46:33Z" name="afterMethod" finished-at="2022-05-20T02:46:37Z" duration-ms="4563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchFuntion status=SUCCESS method=ManageProductExecution.verifySearchFuntion()[pri:1, instance:executeClass.ManageProductExecution@1458ed9c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:48:34Z" name="beforeMethod" finished-at="2022-05-20T02:48:43Z" duration-ms="9124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyResetUnderSearchWillClearSearchResult()[pri:2, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:48:43Z" name="verifyResetUnderSearchWillClearSearchResult" finished-at="2022-05-20T02:48:49Z" duration-ms="5598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResetUnderSearchWillClearSearchResult -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:48:49Z" name="afterMethod" finished-at="2022-05-20T02:48:50Z" duration-ms="1073" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResetUnderSearchWillClearSearchResult status=SUCCESS method=ManageProductExecution.verifyResetUnderSearchWillClearSearchResult()[pri:2, instance:executeClass.ManageProductExecution@1458ed9c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:50:11Z" name="beforeMethod" finished-at="2022-05-20T02:50:20Z" duration-ms="8942" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDelectFuntionality()[pri:3, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:50:20Z" name="verifyDelectFuntionality" finished-at="2022-05-20T02:50:26Z" duration-ms="6039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDelectFuntionality -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:50:26Z" name="afterMethod" finished-at="2022-05-20T02:50:28Z" duration-ms="1796" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDelectFuntionality status=SUCCESS method=ManageProductExecution.verifyDelectFuntionality()[pri:3, instance:executeClass.ManageProductExecution@1458ed9c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:51:29Z" name="beforeMethod" finished-at="2022-05-20T02:51:36Z" duration-ms="6992" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addNewProduct()[pri:4, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:51:36Z" name="addNewProduct" finished-at="2022-05-20T02:51:41Z" duration-ms="5309" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: MicrosoftEdge=101.0.1210.47)
For documentation on this error, please visit: https://selenium.dev/exceptions/#stale_element_reference
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [934a965c02a4e4e0519cf1ce1373ce68, findChildElements {id=f8a2c898-86ae-44de-92e4-5034651a5cd5, using=tag name, value=option}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.47, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:49289}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:49289/devtoo..., se:cdpVersion: 101.0.1210.47, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 934a965c02a4e4e0519cf1ce1373ce68]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: MicrosoftEdge=101.0.1210.47)
For documentation on this error, please visit: https://selenium.dev/exceptions/#stale_element_reference
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [934a965c02a4e4e0519cf1ce1373ce68, findChildElements {id=f8a2c898-86ae-44de-92e4-5034651a5cd5, using=tag name, value=option}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.47, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:49289}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:49289/devtoo..., se:cdpVersion: 101.0.1210.47, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 934a965c02a4e4e0519cf1ce1373ce68
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElements(ElementLocation.java:179)
at org.openqa.selenium.remote.ElementLocation.findElements(ElementLocation.java:102)
at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:397)
at org.openqa.selenium.remote.RemoteWebElement.findElements(RemoteWebElement.java:213)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy17.findElements(Unknown Source)
at org.openqa.selenium.support.ui.Select.getOptions(Select.java:79)
at org.openqa.selenium.support.ui.Select.setSelectedByIndex(Select.java:295)
at org.openqa.selenium.support.ui.Select.selectByIndex(Select.java:176)
at utilities.GeneralUtility.selectDropdownByindex(GeneralUtility.java:87)
at elementRepository.ManageProductPage.SelectSubcategory(ManageProductPage.java:171)
at executeClass.ManageProductExecution.addNewProduct(ManageProductExecution.java:102)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewProduct -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ManageProductExecution@1458ed9c]" started-at="2022-05-20T02:51:41Z" name="afterMethod" finished-at="2022-05-20T02:51:43Z" duration-ms="1422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewProduct status=FAILURE method=ManageProductExecution.addNewProduct()[pri:4, instance:executeClass.ManageProductExecution@1458ed9c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ManageProductExecution -->
      <class name="executeClass.LogInPageExecution">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:42:18Z" name="beforeMethod" finished-at="2022-05-20T02:42:52Z" duration-ms="33593" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isRememberMeCheckboxEnabledAfterClick()[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:42:52Z" name="isRememberMeCheckboxEnabledAfterClick" finished-at="2022-05-20T02:42:52Z" duration-ms="590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isRememberMeCheckboxEnabledAfterClick -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:42:52Z" name="afterMethod" finished-at="2022-05-20T02:43:07Z" duration-ms="15209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isRememberMeCheckboxEnabledAfterClick status=SUCCESS method=LogInPageExecution.isRememberMeCheckboxEnabledAfterClick()[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:43:07Z" name="beforeMethod" finished-at="2022-05-20T02:43:28Z" duration-ms="21008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:43:28Z" name="verifyUnsuccessfulLogin" data-provider="data-provider" finished-at="2022-05-20T02:43:30Z" duration-ms="1817" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin12]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [http://groceryapp.uniqassosiates.com/admin] but found [http://groceryapp.uniqassosiates.com/admin/login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [http://groceryapp.uniqassosiates.com/admin] but found [http://groceryapp.uniqassosiates.com/admin/login]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at executeClass.LogInPageExecution.verifyUnsuccessfulLogin(LogInPageExecution.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:43:30Z" name="afterMethod" finished-at="2022-05-20T02:43:35Z" duration-ms="5059" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=FAILURE method=LogInPageExecution.verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:43:35Z" name="beforeMethod" finished-at="2022-05-20T02:43:45Z" duration-ms="9729" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:43:45Z" name="verifyUnsuccessfulLogin" data-provider="data-provider" finished-at="2022-05-20T02:43:47Z" duration-ms="1711" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [http://groceryapp.uniqassosiates.com/admin] but found [http://groceryapp.uniqassosiates.com/admin/login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [http://groceryapp.uniqassosiates.com/admin] but found [http://groceryapp.uniqassosiates.com/admin/login]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at executeClass.LogInPageExecution.verifyUnsuccessfulLogin(LogInPageExecution.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:43:47Z" name="afterMethod" finished-at="2022-05-20T02:43:48Z" duration-ms="1448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=FAILURE method=LogInPageExecution.verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:43:48Z" name="beforeMethod" finished-at="2022-05-20T02:43:56Z" duration-ms="7976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:43:56Z" name="verifyUnsuccessfulLogin" data-provider="data-provider" finished-at="2022-05-20T02:43:58Z" duration-ms="1415" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin1234]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [http://groceryapp.uniqassosiates.com/admin] but found [http://groceryapp.uniqassosiates.com/admin/login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [http://groceryapp.uniqassosiates.com/admin] but found [http://groceryapp.uniqassosiates.com/admin/login]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at executeClass.LogInPageExecution.verifyUnsuccessfulLogin(LogInPageExecution.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnsuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:43:58Z" name="afterMethod" finished-at="2022-05-20T02:43:59Z" duration-ms="1666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnsuccessfulLogin status=FAILURE method=LogInPageExecution.verifyUnsuccessfulLogin(java.lang.String, java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:45:19Z" name="beforeMethod" finished-at="2022-05-20T02:45:31Z" duration-ms="12556" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfulLogin()[pri:1, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:45:31Z" name="verifySuccessfulLogin" finished-at="2022-05-20T02:45:36Z" duration-ms="4030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:45:36Z" name="afterMethod" finished-at="2022-05-20T02:45:38Z" duration-ms="2301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfulLogin status=SUCCESS method=LogInPageExecution.verifySuccessfulLogin()[pri:1, instance:executeClass.LogInPageExecution@1c93f6e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:48:08Z" name="beforeMethod" finished-at="2022-05-20T02:48:18Z" duration-ms="9802" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySLoginWithInvalidUsernameAndPassword()[pri:2, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:48:18Z" name="verifySLoginWithInvalidUsernameAndPassword" finished-at="2022-05-20T02:48:20Z" duration-ms="1599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySLoginWithInvalidUsernameAndPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.LogInPageExecution@1c93f6e1]" started-at="2022-05-20T02:48:20Z" name="afterMethod" finished-at="2022-05-20T02:48:21Z" duration-ms="970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySLoginWithInvalidUsernameAndPassword status=SUCCESS method=LogInPageExecution.verifySLoginWithInvalidUsernameAndPassword()[pri:2, instance:executeClass.LogInPageExecution@1c93f6e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.LogInPageExecution -->
      <class name="executeClass.CategoryPageExecution">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:44:59Z" name="beforeMethod" finished-at="2022-05-20T02:45:07Z" duration-ms="8082" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyPageHeading()[pri:0, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:45:07Z" name="verifyPageHeading" finished-at="2022-05-20T02:45:16Z" duration-ms="8971" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPageHeading -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:45:16Z" name="afterMethod" finished-at="2022-05-20T02:45:19Z" duration-ms="2927" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPageHeading status=SUCCESS method=CategoryPageExecution.verifyPageHeading()[pri:0, instance:executeClass.CategoryPageExecution@e383572] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:47:52Z" name="beforeMethod" finished-at="2022-05-20T02:48:02Z" duration-ms="9928" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySearchFunction()[pri:1, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:48:02Z" name="verifySearchFunction" finished-at="2022-05-20T02:48:07Z" duration-ms="5381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchFunction -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:48:07Z" name="afterMethod" finished-at="2022-05-20T02:48:08Z" duration-ms="1334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchFunction status=SUCCESS method=CategoryPageExecution.verifySearchFunction()[pri:1, instance:executeClass.CategoryPageExecution@e383572] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:49:27Z" name="beforeMethod" finished-at="2022-05-20T02:49:36Z" duration-ms="8616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addNewCategory()[pri:2, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:49:36Z" name="addNewCategory" finished-at="2022-05-20T02:49:44Z" duration-ms="8569" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (334, 694)
  (Session info: MicrosoftEdge=101.0.1210.47)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [3d211649c92494076a7bd6f5990786be, clickElement {id=c70070d9-ca7d-47cb-931d-069d30ed255b}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.47, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:65227}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:65227/devtoo..., se:cdpVersion: 101.0.1210.47, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[EdgeDriver: msedge on WINDOWS (3d211649c92494076a7bd6f5990786be)] -> xpath: //button[@name='create']]
Session ID: 3d211649c92494076a7bd6f5990786be]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (334, 694)
  (Session info: MicrosoftEdge=101.0.1210.47)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [3d211649c92494076a7bd6f5990786be, clickElement {id=c70070d9-ca7d-47cb-931d-069d30ed255b}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.47, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:65227}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:65227/devtoo..., se:cdpVersion: 101.0.1210.47, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[EdgeDriver: msedge on WINDOWS (3d211649c92494076a7bd6f5990786be)] -> xpath: //button[@name='create']]
Session ID: 3d211649c92494076a7bd6f5990786be
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy17.click(Unknown Source)
at utilities.GeneralUtility.clickElement(GeneralUtility.java:21)
at elementRepository.CategoryPage.clicksave(CategoryPage.java:106)
at executeClass.CategoryPageExecution.addNewCategory(CategoryPageExecution.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewCategory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:49:44Z" name="afterMethod" finished-at="2022-05-20T02:49:46Z" duration-ms="1736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewCategory status=FAILURE method=CategoryPageExecution.addNewCategory()[pri:2, instance:executeClass.CategoryPageExecution@e383572] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:51:04Z" name="beforeMethod" finished-at="2022-05-20T02:51:12Z" duration-ms="8209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCancelOnAddCategoryPageCloseThePage()[pri:3, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:51:12Z" name="verifyCancelOnAddCategoryPageCloseThePage" finished-at="2022-05-20T02:51:17Z" duration-ms="4390" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (402, 694)
  (Session info: MicrosoftEdge=101.0.1210.47)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [06da0142082d7d8840d1771a6330a53a, clickElement {id=265e49b5-d00d-4377-954e-9d130b3d4760}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.47, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:49216}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:49216/devtoo..., se:cdpVersion: 101.0.1210.47, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[EdgeDriver: msedge on WINDOWS (06da0142082d7d8840d1771a6330a53a)] -> xpath: //*[@class='btn btn-default btn-fix']]
Session ID: 06da0142082d7d8840d1771a6330a53a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (402, 694)
  (Session info: MicrosoftEdge=101.0.1210.47)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [06da0142082d7d8840d1771a6330a53a, clickElement {id=265e49b5-d00d-4377-954e-9d130b3d4760}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.47, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:49216}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:49216/devtoo..., se:cdpVersion: 101.0.1210.47, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[EdgeDriver: msedge on WINDOWS (06da0142082d7d8840d1771a6330a53a)] -> xpath: //*[@class='btn btn-default btn-fix']]
Session ID: 06da0142082d7d8840d1771a6330a53a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy17.click(Unknown Source)
at utilities.GeneralUtility.clickElement(GeneralUtility.java:21)
at elementRepository.CategoryPage.clickCancel(CategoryPage.java:114)
at executeClass.CategoryPageExecution.verifyCancelOnAddCategoryPageCloseThePage(CategoryPageExecution.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelOnAddCategoryPageCloseThePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:51:17Z" name="afterMethod" finished-at="2022-05-20T02:51:18Z" duration-ms="1425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelOnAddCategoryPageCloseThePage status=FAILURE method=CategoryPageExecution.verifyCancelOnAddCategoryPageCloseThePage()[pri:3, instance:executeClass.CategoryPageExecution@e383572] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:51:54Z" name="beforeMethod" finished-at="2022-05-20T02:52:02Z" duration-ms="7386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDelectFunction()[pri:4, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:52:02Z" name="verifyDelectFunction" finished-at="2022-05-20T02:52:06Z" duration-ms="4034" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (1289, 740)
  (Session info: MicrosoftEdge=101.0.1210.47)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [d6ebf70c7569b6c8abe3a39324f43836, clickElement {id=b273e8b0-66a5-41af-b041-921494b0dc42}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.47, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:49359}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:49359/devtoo..., se:cdpVersion: 101.0.1210.47, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[EdgeDriver: msedge on WINDOWS (d6ebf70c7569b6c8abe3a39324f43836)] -> xpath: (//*[@class='fas fa-trash-alt'])[6]]
Session ID: d6ebf70c7569b6c8abe3a39324f43836]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (1289, 740)
  (Session info: MicrosoftEdge=101.0.1210.47)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [d6ebf70c7569b6c8abe3a39324f43836, clickElement {id=b273e8b0-66a5-41af-b041-921494b0dc42}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.47, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:49359}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:49359/devtoo..., se:cdpVersion: 101.0.1210.47, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[EdgeDriver: msedge on WINDOWS (d6ebf70c7569b6c8abe3a39324f43836)] -> xpath: (//*[@class='fas fa-trash-alt'])[6]]
Session ID: d6ebf70c7569b6c8abe3a39324f43836
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy17.click(Unknown Source)
at utilities.GeneralUtility.clickElement(GeneralUtility.java:21)
at elementRepository.CategoryPage.clickDelect(CategoryPage.java:122)
at executeClass.CategoryPageExecution.verifyDelectFunction(CategoryPageExecution.java:93)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDelectFunction -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.CategoryPageExecution@e383572]" started-at="2022-05-20T02:52:06Z" name="afterMethod" finished-at="2022-05-20T02:52:07Z" duration-ms="1530" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDelectFunction status=FAILURE method=CategoryPageExecution.verifyDelectFunction()[pri:4, instance:executeClass.CategoryPageExecution@e383572] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.CategoryPageExecution -->
      <class name="executeClass.ExpenceCategoryPageExecution">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@10a9d961]" started-at="2022-05-20T02:44:29Z" name="beforeMethod" finished-at="2022-05-20T02:44:38Z" duration-ms="9194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyHeading()[pri:0, instance:executeClass.ExpenceCategoryPageExecution@10a9d961]" started-at="2022-05-20T02:44:38Z" name="verifyHeading" finished-at="2022-05-20T02:44:42Z" duration-ms="4050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHeading -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@10a9d961]" started-at="2022-05-20T02:44:42Z" name="afterMethod" finished-at="2022-05-20T02:44:44Z" duration-ms="1165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHeading status=SUCCESS method=ExpenceCategoryPageExecution.verifyHeading()[pri:0, instance:executeClass.ExpenceCategoryPageExecution@10a9d961] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@10a9d961]" started-at="2022-05-20T02:46:37Z" name="beforeMethod" finished-at="2022-05-20T02:46:54Z" duration-ms="16407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addNewexpenceCategory()[pri:1, instance:executeClass.ExpenceCategoryPageExecution@10a9d961]" started-at="2022-05-20T02:46:54Z" name="addNewexpenceCategory" finished-at="2022-05-20T02:47:12Z" duration-ms="17853" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='alert alert-success alert-dismissible']"}
  (Session info: MicrosoftEdge=101.0.1210.47)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [13594cba23d5e1aaa8ea67a9bb4ea4a7, findElement {using=xpath, value=//*[@class='alert alert-success alert-dismissible']}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.47, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:64625}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64625/devtoo..., se:cdpVersion: 101.0.1210.47, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 13594cba23d5e1aaa8ea67a9bb4ea4a7]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='alert alert-success alert-dismissible']"}
  (Session info: MicrosoftEdge=101.0.1210.47)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [13594cba23d5e1aaa8ea67a9bb4ea4a7, findElement {using=xpath, value=//*[@class='alert alert-success alert-dismissible']}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.47, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:64625}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64625/devtoo..., se:cdpVersion: 101.0.1210.47, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 13594cba23d5e1aaa8ea67a9bb4ea4a7
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:382)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.isDisplayed(Unknown Source)
at utilities.GeneralUtility.elementDisplayed(GeneralUtility.java:33)
at elementRepository.ExpenceCategoryPage.successfulMessageIsPresent(ExpenceCategoryPage.java:74)
at executeClass.ExpenceCategoryPageExecution.addNewexpenceCategory(ExpenceCategoryPageExecution.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewexpenceCategory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@10a9d961]" started-at="2022-05-20T02:47:12Z" name="afterMethod" finished-at="2022-05-20T02:47:14Z" duration-ms="2432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNewexpenceCategory status=FAILURE method=ExpenceCategoryPageExecution.addNewexpenceCategory()[pri:1, instance:executeClass.ExpenceCategoryPageExecution@10a9d961] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@10a9d961]" started-at="2022-05-20T02:48:50Z" name="beforeMethod" finished-at="2022-05-20T02:49:00Z" duration-ms="9658" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="editExistingCategory()[pri:2, instance:executeClass.ExpenceCategoryPageExecution@10a9d961]" started-at="2022-05-20T02:49:00Z" name="editExistingCategory" finished-at="2022-05-20T02:49:05Z" duration-ms="5671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editExistingCategory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@10a9d961]" started-at="2022-05-20T02:49:05Z" name="afterMethod" finished-at="2022-05-20T02:49:08Z" duration-ms="2317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editExistingCategory status=SUCCESS method=ExpenceCategoryPageExecution.editExistingCategory()[pri:2, instance:executeClass.ExpenceCategoryPageExecution@10a9d961] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@10a9d961]" started-at="2022-05-20T02:50:28Z" name="beforeMethod" finished-at="2022-05-20T02:50:37Z" duration-ms="9306" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="delectCategory()[pri:3, instance:executeClass.ExpenceCategoryPageExecution@10a9d961]" started-at="2022-05-20T02:50:37Z" name="delectCategory" finished-at="2022-05-20T02:50:43Z" duration-ms="6150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delectCategory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.ExpenceCategoryPageExecution@10a9d961]" started-at="2022-05-20T02:50:43Z" name="afterMethod" finished-at="2022-05-20T02:50:44Z" duration-ms="1290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=delectCategory status=SUCCESS method=ExpenceCategoryPageExecution.delectCategory()[pri:3, instance:executeClass.ExpenceCategoryPageExecution@10a9d961] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.ExpenceCategoryPageExecution -->
      <class name="executeClass.AdminUsersPageExecution">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:44:44Z" name="beforeMethod" finished-at="2022-05-20T02:44:54Z" duration-ms="9958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyThePageHeading()[pri:0, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:44:54Z" name="verifyThePageHeading" finished-at="2022-05-20T02:44:58Z" duration-ms="4089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyThePageHeading -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:44:58Z" name="afterMethod" finished-at="2022-05-20T02:44:59Z" duration-ms="1261" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyThePageHeading status=SUCCESS method=AdminUsersPageExecution.verifyThePageHeading()[pri:0, instance:executeClass.AdminUsersPageExecution@130e116b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:47:14Z" name="beforeMethod" finished-at="2022-05-20T02:47:27Z" duration-ms="13343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyNewUseraddedOrNot()[pri:1, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:47:27Z" name="verifyNewUseraddedOrNot" finished-at="2022-05-20T02:47:44Z" duration-ms="16708" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[contains(@class,'alert alert-success ')]"}
  (Session info: MicrosoftEdge=101.0.1210.47)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [630cccea44c872586a2132e5c26eb212, findElement {using=xpath, value=//*[contains(@class,'alert alert-success ')]}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.47, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:64731}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64731/devtoo..., se:cdpVersion: 101.0.1210.47, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 630cccea44c872586a2132e5c26eb212]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[contains(@class,'alert alert-success ')]"}
  (Session info: MicrosoftEdge=101.0.1210.47)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'JAYASANKERMURIN', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [630cccea44c872586a2132e5c26eb212, findElement {using=xpath, value=//*[contains(@class,'alert alert-success ')]}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 101.0.1210.47, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:64731}, msedge: {msedgedriverVersion: 101.0.1210.47 (f5323bd54bb6..., userDataDir: C:\Users\DELLNO~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64731/devtoo..., se:cdpVersion: 101.0.1210.47, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 630cccea44c872586a2132e5c26eb212
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:382)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.isDisplayed(Unknown Source)
at utilities.GeneralUtility.elementDisplayed(GeneralUtility.java:33)
at elementRepository.AdminUsersPage.isDisplayed(AdminUsersPage.java:97)
at executeClass.AdminUsersPageExecution.verifyNewUseraddedOrNot(AdminUsersPageExecution.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNewUseraddedOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:47:44Z" name="afterMethod" finished-at="2022-05-20T02:47:52Z" duration-ms="7381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNewUseraddedOrNot status=FAILURE method=AdminUsersPageExecution.verifyNewUseraddedOrNot()[pri:1, instance:executeClass.AdminUsersPageExecution@130e116b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:49:08Z" name="beforeMethod" finished-at="2022-05-20T02:49:18Z" duration-ms="9962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDelectUserFuctionalty()[pri:2, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:49:18Z" name="verifyDelectUserFuctionalty" finished-at="2022-05-20T02:49:24Z" duration-ms="6809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDelectUserFuctionalty -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:49:24Z" name="afterMethod" finished-at="2022-05-20T02:49:27Z" duration-ms="2805" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDelectUserFuctionalty status=SUCCESS method=AdminUsersPageExecution.verifyDelectUserFuctionalty()[pri:2, instance:executeClass.AdminUsersPageExecution@130e116b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:50:44Z" name="beforeMethod" finished-at="2022-05-20T02:50:55Z" duration-ms="10888" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySearchWithUsername()[pri:3, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:50:55Z" name="verifySearchWithUsername" finished-at="2022-05-20T02:51:00Z" duration-ms="4725" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Robert] but found [.........RESULT NOT FOUND.......]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Robert] but found [.........RESULT NOT FOUND.......]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at executeClass.AdminUsersPageExecution.verifySearchWithUsername(AdminUsersPageExecution.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithUsername -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:51:00Z" name="afterMethod" finished-at="2022-05-20T02:51:04Z" duration-ms="4067" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchWithUsername status=FAILURE method=AdminUsersPageExecution.verifySearchWithUsername()[pri:3, instance:executeClass.AdminUsersPageExecution@130e116b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:51:43Z" name="beforeMethod" finished-at="2022-05-20T02:51:50Z" duration-ms="7039" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="isPage2SelectedByClickingNextPage()[pri:4, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:51:50Z" name="isPage2SelectedByClickingNextPage" finished-at="2022-05-20T02:51:53Z" duration-ms="3461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPage2SelectedByClickingNextPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executeClass.AdminUsersPageExecution@130e116b]" started-at="2022-05-20T02:51:53Z" name="afterMethod" finished-at="2022-05-20T02:51:54Z" duration-ms="1113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isPage2SelectedByClickingNextPage status=SUCCESS method=AdminUsersPageExecution.isPage2SelectedByClickingNextPage()[pri:4, instance:executeClass.AdminUsersPageExecution@130e116b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executeClass.AdminUsersPageExecution -->
    </test> <!-- Edge Browser Test -->
  </suite> <!-- Cross Browser Test Suite -->
</testng-results>
